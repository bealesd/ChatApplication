@model List<ChatApplication.Models.Message>
@{
    var chatMessages = Model;
}

<div id="usernameContainer">
    <h2>
        Chatting as
        <select id="setUsername">
            @if (MessageStore.Username == "David")
            {
                <option selected value="David">David</option>
                <option value="Esther">Esther</option>
            }
            else if (MessageStore.Username == "Esther")
            {
                <option value="David">David</option>
                <option selected value="Esther">Esther</option>
            }
        </select>
    </h2>
</div>

<div id="messagesContainer">
</div>

<div id="sendChatForm">
    <textarea rows="1" style="height:2em;" id="chatMessage" maxlength="250" placeholder="type a message"></textarea>
</div>

<button onclick="getNewMessages()">getNewMessages</button>

<script>
    var lastMessageId = "@Guid.Empty"

    function getLast10Messages() {
        get("Chat/GetLastTenChats").then(function (results) {
            if (results.length > 0) {
                for (var i = 0; i < results.length; i++) {
                    var messageNode = createMessageNode(results[i]);
                    document.getElementById("messagesContainer").innerHTML += messageNode;
                }
                lastMessageId = results[results.length - 1]['id'];
            }
            else {
                console.log("no messages");
            }
        });
    }

    function getNewMessages() {
        get(`Chat/GetChatsAfterId?lastClientId=${lastMessageId}`).then(function (results) {
            if (results.length > 0) {
                for (var i = 0; i < results.length; i++) {
                    var messageNode = createMessageNode(results[i]);
                    document.getElementById("messagesContainer").innerHTML += messageNode;
                }
                lastMessageId = results[results.length - 1]['id'];
            }
            else {
                console.log("no messages");
            }
        });
    }

    function createMessageNode(message) {
        var cSharpTicksFrom1900 = message['datetime'] / 10000;
        var jsTicksFrom1900To1970 = Math.abs(new Date(0, 0, 1).setFullYear(1));
        var messageDateTime = new Date(cSharpTicksFrom1900 - jsTicksFrom1900To1970);

        var messageNode = `<div class="${message['who'].toLowerCase()}">
                            <p class="dateTime">${messageDateTime.toUTCString()}</p>
                            <p class="${message['who'].toLowerCase()}Message">${message['content']}</p>
                         </div>`
        console.log(messageNode);
        return messageNode;
    }

    $(document).ready(function () {
        this.chatHelper.scrollToBottom("messagesContainer")
        getLast10Messages();
    }.bind(this));

    function get(suffix) {
        var getChatsUrl = window.location + suffix;
        var xhttp = new XMLHttpRequest();
        xhttp.open('GET', getChatsUrl, true);
        xhttp.timeout = 30000;
        xhttp.send();
        return new Promise(function (res, rej) {
            xhttp.onreadystatechange = function () {
                if (this.readyState === 4 && (this.status === 200 || this.status === 201))
                    return res(JSON.parse(this.responseText));
                if (this.readyState === 4 && (this.status !== 200 || this.status !== 201))
                    return rej();
            };
        }.bind(this));
    }

    $("#chatMessage").on("keydown", function () {
        this.chatHelper.updateMessageBox('chatMessage');
    }.bind(this))

    $("#chatMessage").on("keyup", function (event) {
        if (event.keyCode === 13) {
            this.chatHelper.validateAndSendChatMessage("chatMessage");
        }
    }.bind(this));

    $("#setUsername").change(function () {
        var username = document.getElementById("setUsername").value;
        window.location.href = `/Chat/SetUsername?username=${username}`;
    }.bind(this))

</script>
